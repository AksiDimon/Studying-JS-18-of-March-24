
//breadCrumbs
function breadcrumbs(catalog, id, result = []) { //id –æ–±–æ–∑–Ω–∞—á–∞–µ—Ç –≤ –∫–∞–∫–æ–π –≤–∫–ª–∞–¥–∫–µ –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —á–µ–ª–æ–≤–µ–∫
    if(id === catalog.id) {
        return [...result, catalog.name]
    }
    for(const child of catalog.children) {
        const rec = breadcrumbs(child, id, [...result, catalog.name] )
        if(rec !== null) {
            return rec
        }
    }
     return null
}
// –ø–æ—á–µ–º—É —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –∫–æ–≥–¥–∞ –æ–Ω–∞ –Ω–∞–ø—Ä–∏–º–µ—Ä –Ω–∞ –û–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–∞–º—è—Ç–∏ –≤–µ—Ä–Ω—É–ª–∞ null —Ç.–∫  —Ç–∞–∫ –∫–∞–∫ –≤ —ç—Ç–æ–π –≤–µ—Ç–≤–µ —Ä–µ–∫—É—Ä—Å–∏—è –Ω–µ –Ω–∞—à–ª–∞  –∏—Å–∫–æ–º–æ–≥–æ id ?
const catalog = {
    id: "1",
    name: "–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞",
    children: [
      {
        id: "2",
        name: "–¢–æ–≤–∞—Ä—ã –¥–ª—è –∫–æ–º–ø—å—é—Ç–µ—Ä–∞",
        children: [
          { id: "3", name: "–û–ø–µ—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–º—è—Ç—å", children: [] },
          { id: "4", name: "–ü—Ä–æ—Ü–µ—Å—Å–æ—Ä—ã", children: [{ id: '123', name: 'Qwerty', children: [] }] },
        ],
      },
      { id: "5", name: "–ú–æ–±–∏–ª—å–Ω—ã–µ —Ç–µ–ª–µ—Ñ–æ–Ω—ã", children: [] },
    ],
  };

  console.log(breadcrumbs(catalog, '123'), 'ü§ñ')
//["–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞", "–¢–æ–≤–∞—Ä—ã –¥–ª—è –∫–æ–º–ø—å—é—Ç–µ—Ä–∞"]


//   console.log(breadcrumbs(catalog, "1"));
// // ["–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞"]

// console.log(breadcrumbs(catalog, "3"));
// // ["–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞", "–¢–æ–≤–∞—Ä—ã –¥–ª—è –∫–æ–º–ø—å—é—Ç–µ—Ä–∞", "–û–ø–µ—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–º—è—Ç—å"]

// console.log(breadcrumbs(catalog, "5"));
// // ["–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞", "–ú–æ–±–∏–ª—å–Ω—ã–µ —Ç–µ–ª–µ—Ñ–æ–Ω—ã"]


function findId (catalog, id, neadId = catalog) {
    //–Ω–∞–π—Ç–∏ –≤ catalog –æ–±—ä–µ–∫—Ç —Å –Ω—É–∂–Ω—ã–º id  
    // –Ω—É–∂–Ω–∞ —Ä–µ–∫—É—Ä—Å–∏—è —á—Ç–æ –±—ã –Ω–∞–π—Ç–∏ —ç—Ç–æ—Ç –æ–±—ä–µ–∫—Ç;
    if(catalog.id === id) {
        return neadId
    }
    for(const child of catalog.children) {
        const rec = findId(child, id, child);
        if(rec !== null) {
            return rec
        }
    }
    return null ; // –∑–¥–µ—Å—å –Ω—É–∂–Ω–æ —ç—Ç–æ –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å –∫–∞–∫ –º–µ—Ç–æ–¥ some;
    //–ø–æ—á–µ–º—É –∑–¥–µ—Å—å –Ω–µ–ª—å–∑—è –≤–µ—Ä–Ω—É—Ç—å false ? –ø–æ—á–µ–º—É –Ω—É–∂–Ω–æ null
    
}

function descendants(catalog = findId(catalog, id), id, result =[]) {// —Å–æ–∑–¥–∞–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏ findId –∫–æ—Ç–æ—Ä–∞—è –Ω–∞—Ö–æ–¥–∏—Ç –ø–æ id  –≤–∫–ª–∞–¥–∫—É –≤ –∫–æ—Ç–æ—Ä–æ–π –º—ã –±—É–¥–µ–º –∏—Å–∫–∞—Ç—å –¥–µ—Ç–µ–π
     
    //const findCildren = catalog.children.map(child => child.id );
    console.log(catalog,'www')
        result.push(catalog.id)
    
    for(const child of catalog.children) {
        
        const rec =  descendants(child)
         result.push(...rec)
    }
    return result
    console.log(map)

}
// —Ä–∞–∑–±–∏—Ç—å –∑–∞–¥–∞—á—É –Ω–∞ 2 —Ñ—É–Ω–∫—Ü–∏–∏
// –Ω–∞–π—Ç–∏ –æ–±—ä–µ–∫—Ç —Å —ç—Ç–∏–º id 
// 2 –Ω–∞–π—Ç–∏ –≤—Å–µ—Ö –ø–æ—Ç–æ–º–∫–æ–≤ —ç—Ç–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞.
//console.log(descendants(catalog, "1"));
// // ["2", "3", "4", "5"]

// console.log(descendants(catalog, "2"));
// // ["3", "4"]

  console.log(descendants(catalog, '2'));
// // []


// console.log(findId(catalog, '123')) // –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–∏



//–û–ø–µ—Ä–∞—Ç–æ—Ä –Ω—É–ª–µ–≤–æ–≥–æ —Å–ª–∏—è–Ω–∏—è 
function check (str) {
    return str ?? 0
}

console.log('' === '') // true
console.log([] === []) // false
// console.log(check('Dima'));
// console.log(check(undefined));
// console.log(check(42));
// console.log(check({name: 'Asya'}))
// console.log(check(null))